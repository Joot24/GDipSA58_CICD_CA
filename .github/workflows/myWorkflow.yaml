name: Build and Push
on:
  push:
    #branches:
    #- release/v[0-9]+.[0-9]+ 

jobs:
  Scanning-Security-Vulnerabilities:
    if: "!startsWith(github.event.head_commit.message, '#NORUN')"
    runs-on: ubuntu-latest
    steps:             
      - name: Checkout source code
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.base_ref }}

      - name: Run Aqua Security Trivy for HIGH severity
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:          
          scan-type: 'fs'
          format: 'table'
          severity: 'HIGH'
          output: 'trivy-scan.txt'

      - name: Scan results outcome
        id: check_output
        run: |
          if [[ -s trivy-scan.txt ]]; then    
             echo "VULNERABILITIES_FOUND=1" >> $GITHUB_ENV
          else
             echo "VULNERABILITIES_FOUND=0" >> $GITHUB_ENV
           fi

      - name: Slack Notification on failure
        if: ${{ env.VULNERABILITIES_FOUND }} == '1'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: failure
          SLACK_TITLE: '*Scan failed - Jefri*'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'          
          SLACK_WEBHOOK: ${{ secrets.RICH_WEBHOOK }}
          #SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}
          #SLACK_TOKEN: ${{ secrets.RICH_TOKEN }}

      - name: Slack upload of vulnerability report
        if: ${{ env.VULNERABILITIES_FOUND }} == '1'
        uses: MeilCli/slack-upload-file@v4      
        with:
          slack_token: ${{ secrets.RICH_TOKEN }}
          #slack_token: ${{ secrets.SLACK_FILE_UPLOAD }}
          channel_id: ${{ secrets.RICH_CHANNELID }}
          #channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-scan.txt'
          initial_comment: 'Scan report by Too Chang Geng Jefri'

      - name: Terminate workflow on failure
        if: ${{ env.VULNERABILITIES_FOUND }} == '1'
        run: exit 1

      # - name: Install Cosign
      #   if: steps.check_output.outcome == 1
      #   uses: sigstore/cosign-installer@v3.5.0

      # - name: Set up QEMU
      #   if: steps.check_output.outcome == 1
      #   uses: docker/setup-qemu-action@v3
      
      # - name: Set up Docker Buildx
      #   if: steps.check_output.outcome == 1
      #   uses: docker/setup-buildx-action@v3
      
      # - name: Login to Docker Hub
      #   if: steps.check_output.outcome == 1
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # - name: Build and push
      #   if: steps.check_output.outcome == 1
      #   id: build-push
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: joot24/go-fortune:${{ github.sha }}     

      # - name: Sign the image with Cosign
      #   if: steps.check_output.outcome == 1
      #   run: |
      #     cosign sign --yes --key env://COSIGN_PRIVATE_KEY joot24/go-fortune@${DIGEST}
      #   env:
      #     COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      #     COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSPHRASE }}
      #     DIGEST: ${{ steps.build-push.outputs.digest }}

      # - name: Slack Notification on success
      #   if: steps.check_output.outcome == 1
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_COLOR: success
      #     SLACK_TITLE: '*Image build and signed*'
      #     SLACK_MESSAGE: |            
      #       *Name:* Too Chang Geng Jefri
      #       *Matriculation:* A0035383H
      #       *Email:* e1332826@u.nus.edu
      #       *Git:* https://github.com/${{ github.repository }}    
      #       *Image:* ${{ vars.DOCKER_URL }}
      #     SLACK_WEBHOOK: ${{ secrets.RICH_WEBHOOK }}
      #     #SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}