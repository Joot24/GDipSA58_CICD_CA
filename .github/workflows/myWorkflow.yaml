name: Build and Push
on:
  push:
    branches:
    - release/v[0-9]+.[0-9]+ 

jobs:
  Scanning-Security-Vulnerabilities-HIGH:
    if: "!startsWith(github.event.head_commit.message, '#NORUN')"
    runs-on: ubuntu-latest
    steps:             
      - name: Checkout source code
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.base_ref }}

      - name: Run Aqua Security Trivy for HIGH severity
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:          
          scan-type: 'fs'
          format: 'table'
          severity: 'HIGH'
          output: 'trivy-scan.txt'

      - name: Scan results outcome
        id: check_output
        run: |
          if [[ -s trivy-scan.txt ]]; then    
             echo "VULNERABILITIES_FOUND=1" >> $GITHUB_OUTPUT
          else
             echo "VULNERABILITIES_FOUND=0" >> $GITHUB_OUTPUT
           fi

      - name: Slack Notification on failure
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: failure
          SLACK_TITLE: '*Scan failed - Jefri*'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'                    
          SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}          

      - name: Slack upload of vulnerability report
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        uses: MeilCli/slack-upload-file@v4      
        with:
          slack_token: ${{ secrets.SLACK_FILE_UPLOAD }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-scan.txt'
          initial_comment: 'Scan report by Too Chang Geng Jefri'

      - name: Terminate workflow on failure
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        run: exit 1

      # The following steps run only if there are no vulnerabilities - Build and push, cosign docker image
      - name: Install Cosign        
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx        
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub        
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push        
        id: build-push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: joot24/go-fortune:${{ github.sha }}     

      - name: Sign the image with Cosign        
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY joot24/go-fortune@${DIGEST}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSPHRASE }}
          DIGEST: ${{ steps.build-push.outputs.digest }}

      - name: Slack Notification on success        
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: success
          SLACK_TITLE: '*Image build and signed*'
          SLACK_MESSAGE: |            
            *Name:* Too Chang Geng Jefri
            *Matriculation:* A0035383H
            *Email:* e1332826@u.nus.edu
            *Git:* https://github.com/${{ github.repository }}    
            *Image:* ${{ vars.DOCKER_URL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}


  Scanning-Security-Vulnerabilities-CRITICAL:
    if: "!startsWith(github.event.head_commit.message, '#NORUN')"
    runs-on: ubuntu-latest
    steps:             
      - name: Checkout source code
        uses: actions/checkout@v4.1.4
        with:
          ref: ${{ github.base_ref }}

      - name: Run Aqua Security Trivy for CRITICAL severity
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:          
          scan-type: 'fs'
          format: 'table'
          severity: 'CRITICAL'
          output: 'trivy-scan.txt'

      - name: Scan results outcome
        id: check_output
        run: |
          if [[ -s trivy-scan.txt ]]; then    
             echo "VULNERABILITIES_FOUND=1" >> $GITHUB_OUTPUT
          else
             echo "VULNERABILITIES_FOUND=0" >> $GITHUB_OUTPUT
           fi

      - name: Slack Notification on failure
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: failure
          SLACK_TITLE: '*Scan failed - Jefri*'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'          
          SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}

      - name: Slack upload of vulnerability report
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        uses: MeilCli/slack-upload-file@v4      
        with:
          slack_token: ${{ secrets.SLACK_FILE_UPLOAD }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy-scan.txt'
          initial_comment: 'Scan report by Too Chang Geng Jefri'

      - name: Terminate workflow on failure
        if: steps.check_output.outputs.VULNERABILITIES_FOUND == '1'
        run: exit 1

      # The following steps run only if there are no vulnerabilities - Build and push, cosign docker image
      - name: Install Cosign        
        uses: sigstore/cosign-installer@v3.5.0

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx        
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub        
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push        
        id: build-push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: joot24/go-fortune:${{ github.sha }}     

      - name: Sign the image with Cosign        
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY joot24/go-fortune@${DIGEST}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSPHRASE }}
          DIGEST: ${{ steps.build-push.outputs.digest }}

      - name: Slack Notification on success        
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: success
          SLACK_TITLE: '*Image build and signed*'
          SLACK_MESSAGE: |            
            *Name:* Too Chang Geng Jefri
            *Matriculation:* A0035383H
            *Email:* e1332826@u.nus.edu
            *Git:* https://github.com/${{ github.repository }}    
            *Image:* ${{ vars.DOCKER_URL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_TEST_SUBMISSION }}